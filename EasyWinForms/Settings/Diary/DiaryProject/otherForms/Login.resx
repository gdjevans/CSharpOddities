<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>